name: Bump Version

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      create_release:
        description: 'Create release after bumping version'
        required: false
        type: boolean
        default: false

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install bump2version
        run: pip install bump2version

      - name: Get current version
        id: current_version
        run: |
          current_version=$(grep '^version = ' pyproject.toml | cut -d'"' -f2)
          echo "current_version=$current_version" >> $GITHUB_OUTPUT
          echo "Current version: $current_version"

      - name: Bump version
        id: bump_version
        run: |
          bump2version --new-version ${{ inputs.bump_type }} pyproject.toml
          new_version=$(grep '^version = ' pyproject.toml | cut -d'"' -f2)
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          echo "New version: $new_version"

      - name: Create git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pyproject.toml
          git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version }}"
          git tag v${{ steps.bump_version.outputs.new_version }}
          git push origin main
          git push origin v${{ steps.bump_version.outputs.new_version }}

      - name: Create Release
        if: inputs.create_release == true
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          release_name: Release v${{ steps.bump_version.outputs.new_version }}
          body: |
            ## Version ${{ steps.bump_version.outputs.new_version }}

            This is a ${{ inputs.bump_type }} version bump from ${{ steps.current_version.outputs.current_version }}.

            ### Changes
            - Version bump: ${{ steps.current_version.outputs.current_version }} â†’ ${{ steps.bump_version.outputs.new_version }}

            ### Next Steps
            The release workflow will automatically build executables for all platforms.
          draft: false
          prerelease: false

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Version bumped to ${{ steps.bump_version.outputs.new_version }}`
            })
